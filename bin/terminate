if [ $# -lt 1 ] && [ -z ${PROFILE} ]; then
    echo 'enter profile or specify PROFILE envvar'
    exit 0
fi

if [ -z ${PROFILE} ]; then
    PROF=$1
else
    PROF=${PROFILE}
fi

source profiles/$PROF

if [ ! -z $GIT_REPO ]; then
    fname="$(basename $GIT_REPO)"
    DIR="${fname%.*}"
    GIT_PATH="/home/hadoop/works/$DIR"
    TEST_COMMIT="cd $GIT_PATH; git status --porcelain | grep '^ M.*'"
    TEST_PUSH="cd $GIT_PATH; git cherry -v"
fi

CLUSTER=`cat "clusters/${PROF}_cluster.id"`

function terminate() {
    echo "Cluster $CLUSTER terminated."
    aws emr terminate-clusters --cluster-ids $CLUSTER --region=$AWS_REGION
    rm clusters/${PROF}_cluster.id
}

uncmt=$(ssh -o StrictHostKeyChecking=no -i $EC2_KEY_PAIR_PATH hadoop@$(aws emr describe-cluster --cluster-id $CLUSTER --region=$AWS_REGION | grep MasterPublicDns | cut -d':' -f2 | tr -d ' ",') "$TEST_COMMIT")
if [ -z "$uncmt" ]; then
    uncmt_cnt=0
else
    uncmt_cnt=$(echo $uncmt | wc -l)
fi

unpush=$(ssh -o StrictHostKeyChecking=no -i $EC2_KEY_PAIR_PATH hadoop@$(aws emr describe-cluster --cluster-id $CLUSTER --region=$AWS_REGION | grep MasterPublicDns | cut -d':' -f2 | tr -d ' ",') "$TEST_PUSH")
if [ -z "$unpush" ]; then
    unpush_cnt=0
else
    unpush_cnt=$(echo $unpush | wc -l)
fi

if [ $uncmt_cnt -gt 0 ] || [ $unpush_cnt -gt 0 ]; then
    echo "There are $uncmt_cnt uncommitted file(s) and $unpush_cnt unpushed commit(s)!!"
    if [ $uncmt_cnt -gt 0 ]; then
        echo ""
        echo "Uncommitted file(s)"
        echo "-------------------"
        echo "$uncmt"
    fi
    if [ $unpush_cnt -gt 0 ]; then
        echo ""
        echo "Unpushed commit(s)"
        echo "-------------------"
        echo "$unpush"
    fi
    echo ""
    read -p "Are you sure to terminate? (y/n)" -n 1 -r
    echo    # (optional) move to a new line
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        terminate
    else
        echo "Canceled."
    fi
else
    terminate
fi

